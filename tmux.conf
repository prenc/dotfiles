# use C-a, since it's C-b will be used in nested tmux 
  set-option -g prefix C-a
  unbind-key C-a
  bind-key C-a send-prefix

  set -g base-index 1

  bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."
  bind E new-window -n 'tmux.conf' 'vim ~/.tmux.conf'
  bind V new-window -n 'vimrc' 'vim ~/.vimrc'

  setw -g mode-keys vi
  set -g status-keys vi

  set -g default-terminal "alacritty"
  set -g default-terminal $TERM
  # set-option -ga terminal-overrides ',$TERM:Tc,*:Ss=\E[%p1%d q:Se=\E[2 q'
  set-option -ga terminal-overrides ",$TERM:Tc"
  set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

  set -g focus-events on
  set -sg escape-time 0

# mouse's for weak people
  # set-option -g -q mouse on
  # set -g mouse-select-pane on
  # set -g mouse-resize-pane on

  bind-key : command-prompt
  bind-key r refresh-client
  bind-key L clear-history
  bind-key Q set -g status

  bind-key space next-window
  bind-key bspace previous-window
  bind-key enter next-layout

# use vim-like keys for splits and windows
  bind-key v split-window -h -c "#{pane_current_path}"
  bind-key s split-window -v -c "#{pane_current_path}"
  bind-key h select-pane -L
  bind-key j select-pane -D
  bind-key k select-pane -U
  bind-key l select-pane -R

# vim-lrke pane resizing
  bind-key -r C-k resize-pane -U
  bind-key -r C-j resize-pane -D
  bind-key -r C-h resize-pane -L
  bind-key -r C-l resize-pane -R

# and now unbind keys
  unbind Up     
  unbind Down   
  unbind Left   
  unbind Right  

  unbind C-Up   
  unbind C-Down 
  unbind C-Left 
  unbind C-Right

# smart pane switching with awareness of vim splits
  is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
  bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
  bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
  bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
  bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
  bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
#  bind C-l send-keys 'C-l'
  bind-key C-o rotate-window
  bind-key + select-layout main-horizontal
  bind-key = select-layout main-vertical
  set-window-option -g other-pane-height 10
  set-window-option -g other-pane-width 90
  bind-key a last-pane
  bind-key q display-panes
  bind-key c new-window -c "#{pane_current_path}"
  bind-key t next-window
  bind-key T previous-window
  bind-key [ copy-mode
  bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
  bind-key -Tcopy-mode-vi 'v' send -X begin-selection
  bind-key -Tcopy-mode-vi 'y' send -X copy-selection-and-cancel
# Update default binding of `Enter` to also use copy-pipe
  bind-key -Tcopy-mode-vi Enter send -X copy-selection-and-cancel


# # Setup 'v' to begin selection as in Vim
#   bind-key -t vi-copy v begin-selection
#   bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# # Update default binding of `Enter` to also use copy-pipe
#   unbind -t vi-copy Enter
#   bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

  set-window-option -g display-panes-time 1500

# Allow the arrow key to be used immediately after changing windows
  set-option -g repeat-time 50

  set -g @continuum-restore 'on'

  set -g monitor-activity on

  set-environment -g TMUX_PLUGIN_MANAGER_PATH '$HOME/.tmux/plugins/'
       
  set -g @plugin 'tmux-plugins/tpm'           
  set -g @plugin 'tmux-plugins/tmux-resurrect'
  set -g @plugin 'tmux-plugins/tmux-continuum'
  set -g @plugin 'tmux-plugins/tmux-yank'     
  set -g @plugin 'egel/tmux-gruvbox'              

  run-shell '~/.tmux/plugins/tpm/tpm'
